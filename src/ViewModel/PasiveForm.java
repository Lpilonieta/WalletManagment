package ViewModel;

import Fragment.Constants;
import Fragment.Pasives;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class PasiveForm {
    private JCheckBox enableDeadLineCheckBox;
    private JCheckBox enablePeriodicyCheckBox;
    private JTextField nameField;
    private JTextField descriptionField;
    private JComboBox typeComboBox;
    private JTextField interestPercentageField;
    private JComboBox interestTypeComboBox;
    private JTextField numberOfInstallmentsField;
    private JComboBox periodicyComboBox;
    private JComboBox firstDeadLineComboBox;
    private JPanel pasivesPanel;

    public PasiveForm() {
        {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
            $$$setupUI$$$();
        }
        typeComboBox.addItem("Seleccione");
        typeComboBox.addItem("Corriente");
        typeComboBox.addItem("No Corriente");
        interestTypeComboBox.addItem("Seleccione");
        interestTypeComboBox.addItem("Normal");
        interestTypeComboBox.addItem("Compuesto");
        periodicyComboBox.addItem("Seleccione");
        periodicyComboBox.addItem("Diaria");
        periodicyComboBox.addItem("Semanal");
        periodicyComboBox.addItem("Mensual");
        periodicyComboBox.addItem("Anual");

        enablePeriodicyCheckBox.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (enablePeriodicyCheckBox.isSelected()) {
                    periodicyComboBox.setEnabled(true);
                } else {
                    periodicyComboBox.setEnabled(false);
                }
            }
        });
        enableDeadLineCheckBox.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (enableDeadLineCheckBox.isSelected()) {
                    firstDeadLineComboBox.setEnabled(true);
                } else {
                    firstDeadLineComboBox.setEnabled(false);
                }
            }
        });
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        pasivesPanel = new JPanel();
        pasivesPanel.setLayout(new GridBagLayout());
        pasivesPanel.setPreferredSize(new Dimension(490, 270));
        final JLabel label1 = new JLabel();
        label1.setText("Nombre");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer2, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Descripción");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer3, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Tipo");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer4, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("% interés");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer5, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Tipo de interés");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer6, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Num Coutas");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 10;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Periodicidad");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 12;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label7, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 11;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer7, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 13;
        gbc.fill = GridBagConstraints.VERTICAL;
        pasivesPanel.add(spacer8, gbc);
        final JLabel label8 = new JLabel();
        label8.setText("Primer fecha de pago");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 14;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(label8, gbc);
        enableDeadLineCheckBox = new JCheckBox();
        enableDeadLineCheckBox.setSelected(false);
        enableDeadLineCheckBox.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 14;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(enableDeadLineCheckBox, gbc);
        enablePeriodicyCheckBox = new JCheckBox();
        enablePeriodicyCheckBox.setSelected(false);
        enablePeriodicyCheckBox.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 12;
        gbc.anchor = GridBagConstraints.WEST;
        pasivesPanel.add(enablePeriodicyCheckBox, gbc);
        nameField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(nameField, gbc);
        descriptionField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(descriptionField, gbc);
        typeComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        typeComboBox.setModel(defaultComboBoxModel1);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(typeComboBox, gbc);
        interestPercentageField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(interestPercentageField, gbc);
        interestTypeComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        interestTypeComboBox.setModel(defaultComboBoxModel2);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(interestTypeComboBox, gbc);
        numberOfInstallmentsField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 10;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(numberOfInstallmentsField, gbc);
        periodicyComboBox = new JComboBox();
        periodicyComboBox.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 12;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(periodicyComboBox, gbc);
        firstDeadLineComboBox = new JComboBox();
        firstDeadLineComboBox.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 14;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pasivesPanel.add(firstDeadLineComboBox, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pasivesPanel;
    }


    public String getName() {
        return nameField.getText();
    }

    public String getDescription() {
        return descriptionField.getText();
    }

    public int getInterestType() {
        if (interestTypeComboBox.getSelectedIndex() == 1) {
            return Constants.LINEAL_INTEREST;

        } else if (interestTypeComboBox.getSelectedIndex() == 2) {
            return Constants.COMPOUND_INTEREST;
        } else {
            return Constants.NONE;
        }
    }

    public int getInterestPercentage() {
        if (interestPercentageField.getText().getBytes().length == 0) {
            return 0;
        } else {
            return Integer.valueOf(interestPercentageField.getText());
        }
    }

    public int getNumberOfInstallments() {
        if (numberOfInstallmentsField.getText().getBytes().length == 0) {
            return 0;
        } else {
            return Integer.valueOf(numberOfInstallmentsField.getText());
        }
    }

    public byte getType() {
        if (typeComboBox.getSelectedIndex() == 1) {
            return Constants.CURRENT;

        } else if (typeComboBox.getSelectedIndex() == 2) {
            return Constants.NO_CURRENT;
        } else {
            return Constants.NONE;
        }
    }

    public byte getPeriodicy() {
        if (enableDeadLineCheckBox.isSelected()) {
            if (periodicyComboBox.getSelectedIndex() == 1) {
                return Constants.DAILY;
            } else if (periodicyComboBox.getSelectedIndex() == 2) {
                return Constants.WEEKLY;
            } else if (periodicyComboBox.getSelectedIndex() == 3) {
                return Constants.MONTHLY;
            } else if (periodicyComboBox.getSelectedIndex() == 4) {
                return Constants.YEARLY;
            } else {
                return Constants.NONE;
            }
        } else {
            return Constants.NONE;
        }
    }

    public int getEspecificPeriodicy() {
        //TODO: arreglar este método + poner en UI
        return 0;
    }


}
