package ViewModel;

import Fragment.Assets;
import Fragment.MainForm;
import Fragment.Pasives;
import Model.AssetsRegistry;
import Model.GeneralRegistry;
import Model.PasivesRegistry;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;

public class RegistroFormulario {
    private JComboBox tipoFormularioComboBox;
    private JTextField valorField;
    private JComboBox fuenteComboBox;
    private JComboBox motivoComboBox;
    private JTextField comentariosField;
    private JPanel panelRegAssetPasive;
    private JButton submitButton;
    private JPanel generalForm;
    private JScrollPane registroScrollPane;
    private JPanel panelTotal;
    private AssetsForm assetPanel;
    private PasiveForm pasivePanel;
    private MainForm newForm;

    public String getFormType() {
        return tipoFormularioComboBox.getSelectedItem().toString();
    }

    public String getValue() {
        if (valorField.getText().getBytes().length == 0) {
            return "0";
        }
        return valorField.getText();
    }

    public String getSource() {
        return fuenteComboBox.getSelectedItem().toString();
    }

    public String getMotive() {
        return motivoComboBox.getSelectedItem().toString();
    }

    public String getComments() {
        return comentariosField.getText();
    }

    private String[] fuenteEgresos = {
            "Seleccione",
            "Efectivo",
            "Transferencia",
            "Tarjeta de crÃ©dito"

    };
    private String[] fuenteIngresos = {
            "Seleccione",
            "Efectivo",
            "Transferencia"

    };

    private String[] motivosEgresos = {
            "ninguno",
            "gasto Regular",
            "compra activo",
            "pago pasivo"

    };
    private String[] motivosIngresos = {
            "ninguno",
            "Salario",
            "Adquirir Deuda",
            "Vender Activo"

    };
    private String[] tipoFormulario = {
            "Seleccione",
            "Ingresos",
            "Egresos"
    };
    private JFrame frame = new JFrame("formulario registro");

    //    private String
    public RegistroFormulario() {
        {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
            $$$setupUI$$$();
        }
        panelTotal.setLayout(new BoxLayout(panelTotal, BoxLayout.Y_AXIS));
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.add($$$getRootComponent$$$());
        frame.setVisible(true);

        tipoFormularioComboBox.addItem(tipoFormulario[0]);
        tipoFormularioComboBox.addItem(tipoFormulario[1]);
        tipoFormularioComboBox.addItem(tipoFormulario[2]);


        motivoComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {

                panelRegAssetPasive.removeAll();
                if (e.getStateChange() == ItemEvent.SELECTED && motivoComboBox.getSelectedIndex() == 3) {
                    //TODO: mostrar lista de pasivos


                } else if (e.getStateChange() == ItemEvent.SELECTED && motivoComboBox.getSelectedIndex() == 2) {
                    if (tipoFormularioComboBox.getSelectedIndex() == 2) {
                        assetPanel = new AssetsForm();
                        panelRegAssetPasive.add(assetPanel.$$$getRootComponent$$$());
                        panelRegAssetPasive.setVisible(true);
                    } else if (tipoFormularioComboBox.getSelectedIndex() == 1) {
                        pasivePanel = new PasiveForm();
                        panelRegAssetPasive.add(pasivePanel.$$$getRootComponent$$$());
                        panelRegAssetPasive.setVisible(true);
                    }

                } else {
                    panelRegAssetPasive.removeAll();
                    panelRegAssetPasive.setVisible(false);
                }
            }
        });
        tipoFormularioComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {

                valorField.setEnabled(true);
                fuenteComboBox.removeAllItems();
                motivoComboBox.removeAllItems();
                if (e.getStateChange() == ItemEvent.SELECTED && tipoFormularioComboBox.getSelectedIndex() == 2) {

                    motivoComboBox.addItem(motivosEgresos[0]);
                    motivoComboBox.addItem(motivosEgresos[1]);
                    motivoComboBox.addItem(motivosEgresos[2]);
                    motivoComboBox.addItem(motivosEgresos[3]);
                    motivoComboBox.setEnabled(true);

                    fuenteComboBox.addItem(fuenteEgresos[0]);
                    fuenteComboBox.addItem(fuenteEgresos[1]);
                    fuenteComboBox.addItem(fuenteEgresos[2]);
                    fuenteComboBox.addItem(fuenteEgresos[3]);
                    fuenteComboBox.setEnabled(true);
                } else if (e.getStateChange() == ItemEvent.SELECTED && tipoFormularioComboBox.getSelectedIndex() == 1) {

                    motivoComboBox.addItem(motivosIngresos[0]);
                    motivoComboBox.addItem(motivosIngresos[1]);
                    motivoComboBox.addItem(motivosIngresos[2]);
                    motivoComboBox.addItem(motivosIngresos[3]);
                    motivoComboBox.setEnabled(true);

                    fuenteComboBox.addItem(fuenteIngresos[0]);
                    fuenteComboBox.addItem(fuenteIngresos[1]);
                    fuenteComboBox.addItem(fuenteIngresos[2]);
                    fuenteComboBox.setEnabled(true);
                } else {
                    valorField.setEnabled(true);
                    motivoComboBox.setEnabled(false);
                    fuenteComboBox.setEnabled(false);
                    fuenteComboBox.removeAllItems();
                    motivoComboBox.removeAllItems();
                }
            }
        });
        submitButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                if (e.getSource() == submitButton) {
                    newForm = new MainForm();
                    newForm.getNewId();
                    newForm.setType(getFormType());
                    newForm.setValue(getValue());
                    newForm.setSource(getSource());
                    newForm.setMotive(getMotive());
                    newForm.setComments(getComments());
                    newForm.setNeedAssetData(2, tipoFormularioComboBox.getSelectedIndex());
                    newForm.setNeedPasiveData(1, tipoFormularioComboBox.getSelectedIndex());

                    if (newForm.isNeedAssetData()) {
                        //TODO: crear objeto asset de mainform
                        newForm.setAsset(new Assets(
                                newForm.getId(),
                                assetPanel.getAssetName(),
                                "",
                                Integer.valueOf(getValue()),
                                assetPanel.getAssetType(),
                                assetPanel.getRentabilityPercentage(),
                                assetPanel.getSaleValue(),
                                assetPanel.getAssetCategory())
                        );
                        newForm.setPasive(null);
                        System.out.println(AssetsRegistry.getAssetsRegistry());
                    } else if (newForm.isNeedPasiveData()) {
                        //TODO: crear objeto pasive de mainform
                        newForm.setAsset(null);
                        newForm.setPasive(new Pasives(
                                newForm.getId(),
                                pasivePanel.getName(),
                                pasivePanel.getDescription(),
                                Integer.valueOf(getValue()),
                                pasivePanel.getInterestType(),
                                pasivePanel.getInterestPercentage(),
                                pasivePanel.getNumberOfInstallments(),
                                pasivePanel.getType(),
                                pasivePanel.getPeriodicy(),
                                pasivePanel.getEspecificPeriodicy()

                        ));
                        System.out.println(PasivesRegistry.getPasivesRegistry());
                    }

                }
                save();
                System.out.println(GeneralRegistry.getGeneralRegistry());

            }
        });
    }

    private void save() {
        String key = newForm.getId();
        Assets assetsDataBaseValue = newForm.getAsset();
        Pasives pasivesDataBaseValue = newForm.getPasive();
        GeneralRegistry.addNewRegistry(key, newForm);
        if (newForm.isNeedAssetData()) {
            AssetsRegistry.addNewAssetRegistry(key, assetsDataBaseValue);
        } else if (newForm.isNeedPasiveData()) {
            PasivesRegistry.addNewPasiveRegistry(key, pasivesDataBaseValue);
        }
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        registroScrollPane = new JScrollPane();
        registroScrollPane.setPreferredSize(new Dimension(500, 600));
        registroScrollPane.setRequestFocusEnabled(true);
        panelTotal = new JPanel();
        panelTotal.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panelTotal.setPreferredSize(new Dimension(500, 600));
        registroScrollPane.setViewportView(panelTotal);
        generalForm = new JPanel();
        generalForm.setLayout(new GridBagLayout());
        generalForm.setPreferredSize(new Dimension(490, 200));
        panelTotal.add(generalForm);
        final JLabel label1 = new JLabel();
        label1.setPreferredSize(new Dimension(150, 20));
        label1.setText("tipo de formulario");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        generalForm.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("valor");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        generalForm.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("fuente");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        generalForm.add(label3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Motivo");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        generalForm.add(label4, gbc);
        motivoComboBox = new JComboBox();
        motivoComboBox.setEnabled(false);
        motivoComboBox.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        generalForm.add(motivoComboBox, gbc);
        tipoFormularioComboBox = new JComboBox();
        tipoFormularioComboBox.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        generalForm.add(tipoFormularioComboBox, gbc);
        valorField = new JTextField();
        valorField.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        generalForm.add(valorField, gbc);
        fuenteComboBox = new JComboBox();
        fuenteComboBox.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        generalForm.add(fuenteComboBox, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        generalForm.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        generalForm.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        generalForm.add(spacer3, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("comentarios");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        generalForm.add(label5, gbc);
        comentariosField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        generalForm.add(comentariosField, gbc);
        panelRegAssetPasive = new JPanel();
        panelRegAssetPasive.setLayout(new GridBagLayout());
        panelRegAssetPasive.setEnabled(true);
        panelRegAssetPasive.setPreferredSize(new Dimension(490, 270));
        panelRegAssetPasive.setVisible(false);
        panelTotal.add(panelRegAssetPasive);
        submitButton = new JButton();
        submitButton.setHorizontalAlignment(0);
        submitButton.setLabel("confirmar");
        submitButton.setText("confirmar");
        panelTotal.add(submitButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return registroScrollPane;
    }

}
